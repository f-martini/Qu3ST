name: SemVer Tagging

on:
  push:
    branches:
      - main

jobs:
  tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Get latest SemVer tag
        id: get_tag
        run: |
          tag=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $tag"
          echo "tag=$tag" >> $GITHUB_OUTPUT

      - name: Determine next version
        id: next_version
        run: |
          tag="${{ steps.get_tag.outputs.tag }}"
          if [ "$tag" = "v0.0.0" ]; then
            # No tags exist, use initial commit hash
            range="$(git rev-list --max-parents=0 HEAD)..HEAD"
          else
            range="$tag..HEAD"
          fi
          version=${tag#v}
          IFS='.' read -r major minor patch <<< "$version"

          # Get commit messages since last tag or from first commit
          commits=$(git log $range --pretty=format:%s)

          bump="patch"  # default
          for msg in $commits; do
            if [[ "$msg" == *"BREAKING CHANGE"* ]]; then
              bump="major"
              break
            elif [[ "$msg" == feat:* && "$bump" != "major" ]]; then
              bump="minor"
            elif [[ "$msg" == fix:* && "$bump" == "patch" ]]; then
              bump="patch"
            fi
          done

          # Bump version
          if [ "$bump" = "major" ]; then
            major=$((major + 1))
            minor=0
            patch=0
          elif [ "$bump" = "minor" ]; then
            minor=$((minor + 1))
            patch=0
          else
            patch=$((patch + 1))
          fi

          echo "next_version=v$major.$minor.$patch"
          echo "next_version=v$major.$minor.$patch" >> $GITHUB_OUTPUT

      - name: Count commits
        id: count
        run: |
          count=$(git rev-list --count HEAD)
          echo "commit_count=$count"
          echo "commit_count=$count" >> $GITHUB_OUTPUT

      - name: Compose full version tag
        id: full_tag
        run: |
          tag="${{ steps.next_version.outputs.next_version }}.${{ steps.count.outputs.commit_count }}"
          echo "Full tag: $tag"
          echo "full_tag=$tag" >> $GITHUB_OUTPUT

      - name: Create and push tag
        run: |
          git tag ${{ steps.full_tag.outputs.full_tag }}
          git push origin ${{ steps.full_tag.outputs.full_tag }}
